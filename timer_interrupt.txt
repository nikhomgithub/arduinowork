System clock 16 MHz in Arduino UNO

Prescaler = 8  mean  2 MHz as default of timer 
                          
TIMER    Size    count     create Interrupt   ability          Timer in function
  0      8 bit   0-255          yes           Compare Match    delay(), millis(), micros()
                                              Overflow         analogWrite() pins 5,6
  
  1     16 bit   0-65,535       yes           Compare Match    Servo function
                                              Overflow         analogWrite() pin 9, 10
                                              Input Capture
  
  2      8 bit   0-255          yes           Compare Match    tone()
                                              Overflow         analogWrite() pin 3,11

Compare Match   = timer count to a certain value, can activate Interrupt (IRP) function
Overflow        = be able to continue start counting again after max value (255 or 65,535) 
                  
compare & overflow : toggle pin, read input  at timer we want  
 

Input Capture   = get Value of count and use in other register 
                  use to measure time, or frequency 

Change config in Timer , effect to some function in some pin 

Example     

Timer1       

65533    
65534    ==  (OCR1A: 65534)          --> Compare Match interrupt -->  TIMER1_COMPA : 1
65535 
    0    -->                             Overflow interrupt      -->  TIMER1_OVEF : 1
    1
    2    --> input pin 0 change value    input capture interrupt  --> TIMER1_CAPT : value of input pin 0   
    3                                                                        ICR1 : 2 (timer1 count value)
    ...


====================================================
//Pins
const int led_pin=13;

void setup(){
  pinMode(led_pin, OUTPUT);
}

void loop(){
  digitalWrite(led_pin, HIGH)
  delay(500);
  digitalWrite(led_pin, LOW)
  delay(500);
}

------------------
//Pins
const in led_pin=PB5;

void setup(){
  //Set LED pin to be output
  DDRB |= ( 1<< led_pin )
}

void lood(){
  PORT
}








